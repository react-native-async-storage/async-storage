name: CI
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  review:
    name: Review
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-name: [lint, ts]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.16.1
          cache: yarn
      - name: Install JS dependencies
        run: yarn
      - name: Run test ${{ matrix.test-name }}
        run: yarn test:${{ matrix.test-name }}
  android:
    name: Android
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.16.1
          cache: yarn
      - name: Install JS dependencies
        run: |
          yarn
      - name: Test Next Storage
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: react-native-async-storage_async-storage:test
          build-root-directory: example/android
      - name: Build e2e binary
        run: |
          yarn build:e2e:android
      - name: Upload e2e binary
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: example/android/app/build/outputs/apk/release/app-release.apk
  ios:
    name: iOS
    if: false # temp
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache /.ccache
        uses: actions/cache@v3
        with:
          path: .ccache
          key: ccache-ios-${{ hashFiles('yarn.lock') }}
          restore-keys: ccache-ios-
      - name: Set up Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.16.1
          cache: yarn
      - name: Set up environment
        run: |
          brew bundle --file=.github/Brewfile.ios --no-lock
          touch .watchmanconfig
      - name: Install JS dependencies
        run: |
          yarn
      - name: Bundle JS
        run: |
          yarn bundle:ios
      - name: Install Pods
        run: |
          RCT_NEW_ARCH_ENABLED=1 pod install
        working-directory: example/ios
      - name: Build e2e binary
        run: |
          yarn build:e2e:ios
      - name: Upload e2e binary
        uses: actions/upload-artifact@v3
        if: github.event_name == 'pull_request'
        with:
          name: ReactTestApp.app
          path: example/ios/build/Build/Products/Release-iphonesimulator/ReactTestApp.app
  macos:
    name: macOS
    if: false # TEMP, Remove once done this PR
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache /.ccache
        uses: actions/cache@v3
        with:
          path: .ccache
          key: ccache-macos-${{ hashFiles('yarn.lock') }}
          restore-keys: ccache-macos-
      - name: Set up Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.16.1
          cache: yarn
      - name: Install JS dependencies
        run: |
          yarn
      - name: Bundle JS
        run: |
          yarn bundle:macos
      - name: Install Pods
        run: |
          RCT_NEW_ARCH_ENABLED=1 pod install
        working-directory: example/macos
      - name: Build
        run: |
          yarn build:e2e:macos
      - name: Test
        if: false
        run: |
          yarn test:e2e:macos
  windows:
    name: Windows
    if: false # TEMP, Remove once done this PR
    runs-on: windows-2022
    steps:
      - name: Set up MSBuild
        uses: microsoft/setup-msbuild@v1.3
      - name: Setup VSTest.console.exe
        uses: darenm/Setup-VSTest@v1.2
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.16.1
          cache: yarn
      - name: Install JS dependencies
        run: |
          yarn
      - name: Install Windows test app
        run: |
          yarn install-windows-test-app -p example/windows
      - name: Build
        run: |
          yarn react-native run-windows --release --arch x64 --logging --no-packager --no-launch --no-deploy --msbuildprops "BundleEntryFile=index.ts" --no-telemetry


  e2e-tests:
    name: Run e2e tests
    needs: [review, android]
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        platform: [ android ] # TEMP removed ios
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.16.1
          cache: yarn
      - name: Install JS dependencies
        run: |
          yarn
      - name: Gradle cache
        uses: gradle/gradle-build-action@v2

      # ios part
      - name: Download iOS binary
        uses: actions/download-artifact@v3
        if: matrix.platform == 'ios'
        with:
          name: ReactTestApp.app
          path: example/ios/build/Build/Products/Release-iphonesimulator/ReactTestApp.app
      - uses: futureware-tech/simulator-action@v2
        if: matrix.platform == 'ios'
        with:
          model: 'iPhone 14'
      - name: Run iOS e2e
        if: matrix.platform == 'ios'
        run: |
          yarn test:e2e:ios

      # android part
      - name: Download android binary
        uses: actions/download-artifact@v3
        if: matrix.platform == 'android'
        with:
          name: app-release.apk
          path: example/android/app/build/outputs/apk/release/
      - name: AVD cache
        if: matrix.platform == 'android'
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-29
      - name: create AVD and generate snapshot for caching
        if: matrix.platform == 'android' && steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      - name: Run Android e2e tests
        if: matrix.platform == 'android'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: yarn test:e2e:android

  release:
    name: Release
    needs: [review, android, ios, macos, windows]
    if: github.event_name == 'push'
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Set up Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.16.1
          cache: yarn
      - name: Install JS dependencies
        run: |
          yarn
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GH_BOT_EMAIL }}
          GIT_AUTHOR_NAME : ${{ secrets.GH_BOT_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.GH_BOT_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.GH_BOT_NAME }}
          NPM_TOKEN: ${{ secrets.NPM_RELEASE_TOKEN }}
        run: |
          git config user.email ${{ secrets.GH_BOT_EMAIL }}
          git config user.name ${{ secrets.GH_BOT_NAME }}
          yarn semantic-release

name: CI
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  review:
    name: Review
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-name: [lint, ts]
        workspace: [default-storage-backend, core]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.16.1
          cache: yarn
      - name: Install JS dependencies
        run: yarn
      - name: Run test ${{ matrix.test-name }}
        run: yarn test:${{ matrix.test-name }}
        working-directory: packages/${{ matrix.workspace }}
  android:
    name: Android
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.16.1
          cache: yarn
      - name: Install JS dependencies
        run: |
          yarn
      - name: Test Next Storage
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: react-native-async-storage_async-storage:test
          build-root-directory: packages/default-storage-backend/example/android
      - name: Build e2e binary
        run: |
          yarn build:e2e:android
        working-directory: packages/default-storage-backend

  ios:
    name: iOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache /.ccache
        uses: actions/cache@v3
        with:
          path: packages/default-storage-backend/.ccache
          key: ccache-ios-${{ hashFiles('yarn.lock') }}
          restore-keys: ccache-ios-
      - name: Set up Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.16.1
          cache: yarn
      - name: Install JS dependencies
        run: |
          yarn
      - name: Bundle JS
        run: |
          yarn bundle:ios
        working-directory: packages/default-storage-backend
      - name: Install Pods
        run: |
          RCT_NEW_ARCH_ENABLED=1 pod install
        working-directory: packages/default-storage-backend/example/ios
      - name: Build e2e binary
        run: |
          yarn build:e2e:ios
        working-directory: packages/default-storage-backend

  macos:
    name: macOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache /.ccache
        uses: actions/cache@v3
        with:
          path: packages/default-storage-backend/.ccache
          key: ccache-macos-${{ hashFiles('yarn.lock') }}
          restore-keys: ccache-macos-
      - name: Set up Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.16.1
          cache: yarn
      - name: Install JS dependencies
        run: |
          yarn
      - name: Bundle JS
        run: |
          yarn bundle:macos
        working-directory: packages/default-storage-backend
      - name: Install Pods
        run: |
          RCT_NEW_ARCH_ENABLED=1 pod install
        working-directory: packages/default-storage-backend/example/macos
      - name: Build
        run: |
          yarn build:e2e:macos
        working-directory: packages/default-storage-backend
      - name: Test
        if: false
        run: |
          yarn test:e2e:macos
        working-directory: packages/default-storage-backend

  windows:
    name: Windows
    runs-on: windows-2022
    steps:
      - name: Set up MSBuild
        uses: microsoft/setup-msbuild@v1.3
      - name: Setup VSTest.console.exe
        uses: darenm/Setup-VSTest@v1.2
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.16.1
          cache: yarn
      - name: Install JS dependencies
        run: |
          yarn
      - name: Install Windows test app
        run: |
          yarn install-windows-test-app -p example/windows
        working-directory: packages/default-storage-backend
      - name: Build
        run: |
          yarn react-native run-windows --release --arch x64 --logging --no-packager --no-launch --no-deploy --msbuildprops "BundleEntryFile=index.ts" --no-telemetry
        working-directory: packages/default-storage-backend

  release:
    name: Release
    needs: [review, android, ios, macos, windows]
    if: github.event_name == 'push'
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Set up Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18.16.1
          cache: yarn
      - name: Install JS dependencies
        run: |
          yarn
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GH_BOT_EMAIL }}
          GIT_AUTHOR_NAME : ${{ secrets.GH_BOT_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.GH_BOT_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.GH_BOT_NAME }}
          NPM_TOKEN: ${{ secrets.NPM_RELEASE_TOKEN }}
        run: |
          git config user.email ${{ secrets.GH_BOT_EMAIL }}
          git config user.name ${{ secrets.GH_BOT_NAME }}
          yarn semantic-release
        working-directory: packages/default-storage-backend

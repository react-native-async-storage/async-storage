name: CI
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  review:
    name: Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 16
          cache: yarn
      - name: Install JS dependencies
        run: |
          yarn
      - name: Lint
        run: |
          yarn test:lint
      - name: TypeScript
        run: |
          yarn test:ts
  android:
    name: Android
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 16
          cache: yarn
      - name: Install JS dependencies
        run: |
          yarn
      - name: Test Next Storage
        uses: gradle/gradle-build-action@v2.3.3
        with:
          gradle-version: wrapper
          arguments: react-native-async-storage_async-storage:test
          build-root-directory: example/android
  ios:
    name: iOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache /.ccache
        uses: actions/cache@v3
        with:
          path: .ccache
          key: ccache-ios-${{ hashFiles('yarn.lock') }}
          restore-keys: ccache-ios-
      - name: Set up Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 16
          cache: yarn
      - name: Set up environment
        run: |
          brew bundle --file=.github/Brewfile.ios --no-lock
          touch .watchmanconfig
      - name: Install JS dependencies
        run: |
          yarn
      - name: Bundle JS
        run: |
          yarn bundle:ios --dev false
      - name: Install Pods
        run: |
          pod install
        working-directory: example/ios
      - name: Boot simulator
        run: |
          ./scripts/ios_e2e.sh 'run_simulator'
      - name: Build
        run: |
          yarn build:e2e:ios
      - name: Test
        run: |
          yarn test:e2e:ios
  macos:
    name: macOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache /.ccache
        uses: actions/cache@v3
        with:
          path: .ccache
          key: ccache-macos-${{ hashFiles('yarn.lock') }}
          restore-keys: ccache-macos-
      - name: Set up Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 16
          cache: yarn
      - name: Install JS dependencies
        run: |
          yarn
      - name: Bundle JS
        run: |
          yarn bundle:macos
      - name: Install Pods
        run: |
          pod install
        working-directory: example/macos
      - name: Build and test
        run: |
          yarn test:e2e:macos
  windows:
    name: Windows
    runs-on: windows-2019
    steps:
      - name: Set up MSBuild
        uses: microsoft/setup-msbuild@v1.3
      - name: Setup VSTest.console.exe
        uses: darenm/Setup-VSTest@v1.2
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 16
          cache: yarn
      - name: Install JS dependencies
        run: |
          yarn
      - name: Install Windows test app
        run: |
          yarn install-windows-test-app -p example/windows
      - name: Build
        run: |
          yarn react-native run-windows --release --arch x64 --logging --no-packager --no-launch --no-deploy --msbuildprops "BundleEntryFile=index.ts" --no-telemetry
  release:
    name: Release
    # Disable auto releases, until v2 is ready
    if: ${{ false }}
    needs: [review, android, ios, macos, windows]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_RELEASE_TOKEN }}
      - name: Setup git
        run: |
          git config user.email ${{ secrets.GH_BOT_EMAIL }}
          git config user.name ${{ secrets.GH_BOT_NAME }}
      - name: Set up Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 16
          cache: yarn
      - name: Install JS dependencies
        run: |
          yarn
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GH_BOT_EMAIL }}
          GIT_AUTHOR_NAME : ${{ secrets.GH_BOT_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.GH_BOT_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.GH_BOT_NAME }}
          NPM_TOKEN: ${{ secrets.NPM_RELEASE_TOKEN }}
        run: |
          yarn semantic-release

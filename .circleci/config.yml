version: 2

# ==============================
# DEFAULTS FOR JOBS
# ==============================

default job config: &defaults
  working_directory: ~/async_storage

checkout step for each job: &addWorkspace
  attach_workspace:
    at: ~/async_storage

# ==============================
# ENVIRONMENT VARIABLES
# ==============================

default config for js: &js_defaults
  <<: *defaults
  docker:
    - image: cimg/node:14.18.1

default config for macOS: &macos_defaults
  <<: *defaults
  resource_class: 'medium'
  macos:
    xcode: '13.1.0'

default config for android apk tests: &android_defaults
  <<: *defaults
  resource_class: large
  machine:
    image: android:2022.06.2

# ==============================
# CACHE CONFIG
# ==============================

cache keys:
  brew ios: &key_brew_ios cache-brew-ios-v5-{{ arch }}
  yarn: &key_yarn cache-yarn-{{ checksum "package.json" }}-{{ arch }}
  gradle: &key_gradle cache-gradle-v2-{{ checksum "example/android/gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "package.json" }}-{{ arch }}
  pods: &key_pods cache-pods-v0.64-{{ checksum "example/ios/Podfile" }}-{{ checksum "package.json" }}-{{ arch }}

cache:
  # brew
  save brew cache for ios: &cache_save_brew_ios
    name: Saving Brew cache
    paths:
      - ~/Library/Caches/Homebrew
    key: *key_brew_ios

  restore brew cache for ios: &cache_restore_brew_ios
    name: Restoring Brew cache
    keys:
      - *key_brew_ios

  # yarn
  save yarn cache: &cache_save_yarn
    name: Saving Yarn cache
    paths:
      - .yarn/cache
      - ~/Library/Detox
    key: *key_yarn

  restore yarn cache: &cache_restore_yarn
    name: Restoring Yarn cache
    keys:
      - *key_yarn

  # gradle
  save gradle cache: &cache_save_gradle
    name: Saving Gradle cache
    key: *key_gradle
    paths:
      - ~/.gradle/wrapper
      - ~/.gradle/caches

  restore gradle cache: &cache_restore_gradle
    name: Restoring Gradle cache
    keys:
      - *key_gradle

  # cocoapods
  save pods cache: &cache_save_pods
    name: Saving Pods
    key: *key_pods
    paths:
      - example/ios/Pods

  restore pods cache: &cache_restore_pods
    name: Restoring Pods
    keys:
      - *key_pods

# ==============================
# JOBS
# ==============================

jobs:
  "Setup environment":
    <<: *js_defaults
    steps:
      - checkout
      - restore-cache: *cache_restore_yarn
      - run:
          name: Install dependencies
          command: yarn
      - save-cache: *cache_save_yarn
      - persist_to_workspace:
          root: .
          paths: .

  "Test: Android unit":
    <<: *android_defaults
    steps:
      - *addWorkspace
      - restore-cache: *cache_restore_yarn
      - run:
          name: Installing Yarn dependencies
          command: yarn
      - save-cache: *cache_save_yarn
      - restore-cache: *cache_restore_gradle
      - run:
          name: Downloading Gradle dependencies
          working_directory: example/android
          command: ./gradlew --max-workers 2 fetchDependencies
      - save-cache: *cache_save_gradle
      - run:
          name: Next storage tests
          working_directory: example/android
          command: ./gradlew react-native-async-storage_async-storage:test

  "Test: iOS e2e":
    <<: *macos_defaults
    steps:
      - *addWorkspace
      - restore-cache: *cache_restore_brew_ios
      - run:
          name: Configure macOS Environment
          command: |
            brew bundle --file=.circleci/Brewfile.ios --no-lock
            touch .watchmanconfig
            echo Node $(node --version)
      - save-cache: *cache_save_brew_ios
      - restore-cache: *cache_restore_yarn
      - run:
          name: Installing Yarn dependencies
          command: yarn
      - save-cache: *cache_save_yarn
      - restore-cache: *cache_restore_pods
      - run:
          name: Bundle JS
          command: yarn bundle:ios --dev false
      - run:
          name: Install pod dependencies
          working_directory: example/ios
          command: pod install
      - save-cache: *cache_save_pods
      - run:
          name: Boot simulator
          background: true
          command: ./scripts/ios_e2e.sh 'run_simulator'
      - run:
          name: Build iOS app
          command: |
            # Workaround for `nvm is not compatible with the "PREFIX" environment variable`
            echo > node_modules/react-native/scripts/find-node.sh
            yarn build:e2e:ios
      - run:
          name: Run e2e tests
          command: yarn test:e2e:ios

  "Test: Android e2e":
    <<: *android_defaults
    steps:
      - *addWorkspace
      - run:
          name: "Install node v14.18.1 and yarn 1.22.17"
          command: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
            source ~/.bashrc
            nvm install v14.18.1
            node -v
            npm install --global yarn@1.22.17
            yarn -v
      - restore_cache: *cache_restore_yarn
      - run:
          name: Install dependencies
          command: yarn
      - save_cache: *cache_save_yarn
      - run:
          name: Bundle JS
          command: yarn bundle:android --dev false
      - run:
          name: Build APKs
          command: yarn build:e2e:android
      - run:
          name: Build APK with Next storage
          working_directory: example/android
          command: ./gradlew assembleNext --max-workers 2
      - run:
          name: Configure Environment Variables
          command: |
            echo 'export QEMU_AUDIO_DRV=none' >> $BASH_ENV
            echo 'export PATH="$PATH:~/async_storage/node_modules/.bin"' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Install Android system image
          command: |
            sdkmanager "system-images;android-30;default;x86_64"
      - run:
          name: "Create Android emulator"
          command: |
            avdmanager create avd -n E2E_API_30 -d pixel_4 --package "system-images;android-30;default;x86_64"
      - run:
          name: Launch emulator
          command: |
            emulator -avd E2E_API_30 -delay-adb -verbose -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
          background: true
      - run:
          name: "Make sure TestButler apk is present"
          command: ./scripts/android_e2e.sh 'install_test_butler'
      - run:
          name: Wait for emulator to boot
          command: ./scripts/android_e2e.sh 'wait_for_emulator'
      - run:
          name: Run e2e tests
          command: yarn test:e2e:android
      - run:
          name: Clear previous app from device
          command: adb uninstall com.microsoft.reacttestapp
      - run:
          name: Run e2e tests for Next storage
          command: yarn detox test -c android.emu.release.next --maxConcurrency 1

# ==============================
# WORK FLOWS
# ==============================
workflows:
  version: 2
  "Testing":
    jobs:
      - "Setup environment"
      - "Test: Android unit":
          requires:
            - "Setup environment"
      - "Test: iOS e2e":
          requires:
            - "Setup environment"
      - "Test: Android e2e":
          requires:
            - "Test: Android unit"
          filters:
            branches:
              only:
                - temporarily-disabled--see-issue-840
